# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  node: circleci/node@7

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    executor: node/default
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    # docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      # - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - node/install-packages
      - run:
          name: "Say hello"
          command: mkdir -p test-results/jest
      - run:
          name: Run tests with JUnit reporter
          command: |
            JEST_JUNIT_OUTPUT_DIR=test-results/jest JEST_JUNIT_OUTPUT_NAME=results.xml npm test -- --reporters=default --reporters=jest-junit
      - store_test_results:
          path: test-results
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
